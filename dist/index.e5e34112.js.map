{"mappings":"AAAA,MAAM,eAAe,GAAG,uBAAuB,AAAC;AAEhD,MAAM,eAAe,GAAG,OAAO,GAAW,EAAE,MAAc,EAAE,IAAS,GAAK;IACxE,MAAM,SAAS,GAAG,IAAM;QACtB,IAAI,MAAM,KAAK,MAAM,EACnB,OAAO,IAAI,CAAC,SAAS,CAAC,IAAI,CAAC,CAAC;aAE5B,OAAO,IAAI,CAAC;KAEf,AAAC;IACF,MAAM,GAAG,GAAG,MAAM,KAAK,CAAC,GAAG,EAAE;QAC3B,MAAM,EAAE,MAAM;QAEd,OAAO,EAAE;YACP,cAAc,EAAE,kBAAkB;YAClC,SAAS,EAAE,MAAM;YACjB,IAAI,EAAE,OAAO;SACd;QAED,IAAI,EAAE,SAAS,EAAE;KAClB,CAAC,AAAC;IACH,OAAO,GAAG,CAAC,IAAI,EAAE,CAAC;CACnB,AAAC;AAEF,MAAM,GAAG,GAAG,QAAQ,CAAC,aAAa,CAAC,QAAQ,CAAC,AAAC,AAAC;AAC9C,MAAM,WAAW,GAAG,QAAQ,CAAC,aAAa,CAAC,eAAe,CAAC,AAAC,AAAC;AAE7D,MAAM,OAAO,GAAG,UAAY;IAC1B,MAAM,GAAG,GAAG,MAAM,eAAe,CAAC,eAAe,EAAE,MAAM,EAAE;QAAE,IAAI,EAAE,KAAK;KAAE,CAAC,AAAC;IAC5E,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;CACrC,AAAC;AAEF,MAAM,UAAU,GAAG,UAAY;IAC7B,MAAM,GAAG,GAAG,MAAM,eAAe,CAAC,eAAe,EAAE,KAAK,EAAE,EAAE,CAAC,AAAC;IAC9D,WAAW,CAAC,SAAS,GAAG,GAAG,CAAC,OAAO,CAAC;CACrC,AAAC;AAEF,MAAM,aAAa,GAAG,UAAY;IAChC,MAAM,GAAG,GAAG,MAAM,eAAe,CAAC,eAAe,EAAE,KAAK,EAAE,EAAE,CAAC,AAAC;IAC9D,uCAAuC;IACvC,OAAO,CAAC,GAAG,CAAC,GAAG,CAAC,CAAC;CAClB,AAAC;AAEF,mDAAmD;AACnD,8EAA8E;AAC9E,wBAAwB;AACxB,QAAQ;AACR,sBAAsB;AAEtB,yCAAyC;AACzC,KAAK;AAEL,MAAM,UAAU,GAAG,IAAM;IACvB,OAAO,OAAO,CAAC,GAAG,CAAC,SAAS,CAAC,CAAC;CAC/B,AAAC;AAEF,6DAA6D;AAC7D,GAAG,CAAC,gBAAgB,CAAC,OAAO,EAAE,aAAa,CAAQ,CAAC","sources":["src/js/controller.ts"],"sourcesContent":["const localNodeServer = 'http://localhost:3000';\r\n\r\nconst sendReqtoServer = async (url: string, method: string, body: any) => {\r\n  const checkBody = () => {\r\n    if (method === 'POST') {\r\n      return JSON.stringify(body);\r\n    } else {\r\n      return null;\r\n    }\r\n  };\r\n  const res = await fetch(url, {\r\n    method: method,\r\n\r\n    headers: {\r\n      'Content-Type': 'application/json',\r\n      'no-cors': 'true',\r\n      cors: 'false',\r\n    },\r\n\r\n    body: checkBody(),\r\n  });\r\n  return res.json();\r\n};\r\n\r\nconst btn = document.querySelector('button')!;\r\nconst fetchResult = document.querySelector('#fetch-result')!;\r\n\r\nconst sendReq = async () => {\r\n  const res = await sendReqtoServer(localNodeServer, 'POST', { name: 'max' });\r\n  fetchResult.innerHTML = res.message;\r\n};\r\n\r\nconst sendGetReq = async () => {\r\n  const res = await sendReqtoServer(localNodeServer, 'GET', {});\r\n  fetchResult.innerHTML = res.message;\r\n};\r\n\r\nconst fetchPageHtml = async () => {\r\n  const res = await sendReqtoServer(localNodeServer, 'GET', {});\r\n  // fetchResult.innerHTML = res.message;\r\n  console.log(res);\r\n};\r\n\r\n// const sendMessage = async (message: string) => {\r\n//   const res = await sendReqtoServer(`${localNodeServer}/message`, 'POST', {\r\n//     message: message,\r\n//   });\r\n//   console.log(res);\r\n\r\n//   fetchResult.innerHTML = res.message;\r\n// };\r\n\r\nconst clickCheck = () => {\r\n  return console.log('clicked');\r\n};\r\n\r\n// btn.addEventListener('click', sendMessage('yooo') as any);\r\nbtn.addEventListener('click', fetchPageHtml as any);\r\n"],"names":[],"version":3,"file":"index.e5e34112.js.map","sourceRoot":"/__parcel_source_root/"}